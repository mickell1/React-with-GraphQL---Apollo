{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/mcrawford/Code/React-with-GraphQL-Apollo/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/mcrawford/Code/React-with-GraphQL-Apollo/src/Profile/index.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  {\\n    viewer {\\n      repositories(\\n        first: 5\\n        orderBy: { direction: DESC, field: STARGAZERS }\\n      ) {\\n        edges {\\n          node {\\n            id\\n            name\\n            url\\n            descriptionHTML\\n            primaryLanguage {\\n              name\\n            }\\n            owner {\\n              login\\n              url\\n            }\\n            stargazers {\\n              totalCount\\n            }\\n            viewerHasStarred\\n            watchers {\\n              totalCount\\n            }\\n            viewerSubscription\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nconst GET_REPOSITORIES_OF_CURRENT_USER = gql(_templateObject());\n\nconst Profile = () => React.createElement(Query, {\n  query: GET_CURRENT_USER,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}, ({\n  data,\n  loading\n}) => {\n  const viewer = data.viewer;\n\n  if (loading || !viewer) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Loading ...\");\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, viewer.name, \" \", viewer.login);\n});\n\nexport default Profile;","map":{"version":3,"sources":["/Users/mcrawford/Code/React-with-GraphQL-Apollo/src/Profile/index.js"],"names":["React","gql","Query","GET_REPOSITORIES_OF_CURRENT_USER","Profile","GET_CURRENT_USER","data","loading","viewer","name","login"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,cAAtB;AAEA,MAAMC,gCAAgC,GAAGF,GAAH,mBAAtC;;AAmCA,MAAMG,OAAO,GAAG,MACd,oBAAC,KAAD;AAAO,EAAA,KAAK,EAAEC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEI,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAuB;AAAA,QACbC,MADa,GACFF,IADE,CACbE,MADa;;AAGrB,MAAID,OAAO,IAAI,CAACC,MAAhB,EAAwB;AACtB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,MAAM,CAACC,IADV,OACiBD,MAAM,CAACE,KADxB,CADF;AAKD,CAdL,CADF;;AAoBA,eAAeN,OAAf","sourcesContent":["import React from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\n\nconst GET_REPOSITORIES_OF_CURRENT_USER = gql`\n  {\n    viewer {\n      repositories(\n        first: 5\n        orderBy: { direction: DESC, field: STARGAZERS }\n      ) {\n        edges {\n          node {\n            id\n            name\n            url\n            descriptionHTML\n            primaryLanguage {\n              name\n            }\n            owner {\n              login\n              url\n            }\n            stargazers {\n              totalCount\n            }\n            viewerHasStarred\n            watchers {\n              totalCount\n            }\n            viewerSubscription\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst Profile = () => (\n  <Query query={GET_CURRENT_USER}>\n    {\n      ({ data, loading }) => {\n        const { viewer } = data;\n\n        if (loading || !viewer) {\n          return <div>Loading ...</div>;\n        }\n\n        return (\n          <div>\n            {viewer.name} {viewer.login}\n          </div>\n        );\n      }\n    }\n  </Query>\n)\n\nexport default Profile;"]},"metadata":{},"sourceType":"module"}